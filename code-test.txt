In traditional programming, the programmer takes on the role of narrator,
director, writer and actor.

Let's make a cup of tea.

Our program is executed by a robot upon entering the kitchen.

At least the following things are assumed to be in the room:

    . The robot, duh.
    . An empty cup,
    . An electric kettle,
    . A faucet,
    . A tea bag,
    . An electric outlet,
    . A counter,
    . A cupboard,

It is possible for one thing to be inside of another - the tea bag in the cup.

Each item has an "id", a number between 0 and 99. The only item we know the
id for is the robot, which has id 0. The cup might be id 1 or it might be id
23.

The robot's movement is not very precise, so for the purposes of our code
the room can be considered as being a square of being between 2-5 squares
on a side. It could be 2x2 or it could be 3x4 or 5x5, etc.

Robot can have one of four orientations:

    North, South, East or West


Items can have the following properties:

    true/false answers:
        "Portable"
            Can the robot hold the item,
        "Manipulable"
            Is there an obvious switch/button/knob the robot can operate,
        "On"
            If the item *can* be switched, is it switched to on?
        "Metalic"
            Whether the item is made of metal or not
        "Rigid"
            If the item is stiff/inflexible
        "Container"
            If the item coud hold one of the other items in the room
    Numeric values
        "Temperature"
            In celcius, 0 is freezing temperature of water, 100 boiling.
            21c is room temperature.
        "Weight"
            approximate weight in ounces. Item must be held or else it
            will have a weight of 0.
        "Volume"
            0 -- Invalid "thing", or it is not something the robot can
                 interact with - maybe it's the ceiling or something.
            1 -- very small
            2 -- small
            3 -- medium
            4 -- large
        "Capacity"
            The maximum volume the item can contain, if it is a container
            See "Volume"
        "PositionX"
        "PositionY"
            Where in the room it is. Program will crash if used on the
            robot or something it is holding.

Example: The tea bag is portable, you can't switch it on, and it's probably at room temperature.


The robot has the following commands:

    ItemInHand()

        Returns the item_id of the thing the robot is holding,
        or 0 if the robot is holding nothing.

    ItemInfrontOfMe()

        Returns the item_id of the item the robot is facing - a space can have
        more than one item, but only one item in any Orientation.

    Turn(orientation)
    Oriented()

        Turns the robot to face a direction or queries the direction
        the robot is facing.

    PositionX()
    PositionY()

        Gets the robots position within the cells of the room

    Forward()

        Tries to move the robot forward and returns either true or false to
        indicate whether it was successful.

    Query(thing_id, property)

        Allows you to query properties of observed items. That is: you
        have to be facing, holding or just be an item to inspect it.

        e.g.
            weight = Query(1, Weight)

    Take(thing_id)

        Returns true if the "thing_id" was in front of you and you were
        able to pick it up.

        Otherwise returns false.

    Place(thing_id)

        Returns true if the "thing_id" was in your hand and could be placed
        in front of you.

        Otherwise false.

    Switch(thing_id)

        If the 'thing' can be turned/switched, change it.

    Interactable(thing1, thing2)

        Can thing1 and thing2 interact?

    Put(thing1, thing2)

        Returns true if you were holding thing1, thing2 was infront of you
        and thing2 could either contain thing2 or interact with it. E.g
        Put()ing the kettle to the cup will transfer water.

I decided to skip some "trick" states, such as needing to discover if the cup
is dirty and thus needs washing; if the kettle is full of milk; etc.

How would we write a program for the robot?

I'm not going to define a formal language, we can pretty much make up our own.

Lets assume the room doesn't change, that is we can repeat the same steps
and get the same results from a clean start. And lets assume this is a
"version 1" where we don't care too much about edge cases; none of the items
will be missing, there's nobody else in the room, hitler won't invade.

Start by writing out a summary of what we need to do, as functions.

    kettle = find_kettle()  # kettle is now an id number
    Get(kettle)             # pick it up
    sink   = find_sink()
    fill_kettle(kettle, sink)
    outlet = find_electrical_outlet()
    power_on(kettle, outlet)
    bag = find_tea_bag()
    cup = find_cup()
    Put(bag, cpu)
    goto(kettle)
    wait_for_temperature(kettle, 98)
    Get(kettle)
    fill_cup(cup, kettle)
    