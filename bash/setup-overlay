#! /bin/bash
# setup-overlay: Author: Oliver 'kfsone' Smith <oliver@kfs.org>
# License: MIT
#
# Uses an overlay fs to provide a form of snapshotting for a given filesystem
# or directory tree.
#
# Once mounted, the original source tree is actually an alias for the shadow
# tree with a union-fallback to the source. Thus if source/Foo exists and
# you delete it, it will no-longer be visible via the overlay but will still
# exist in the underlying source directory.
#
#   Source  :-  The original/base filesystem to expose,
#   Shadow  :-  Where changes to the source will be persisted,
#   Work    :-  Intermediates/workfiles,
# 

function make_overlay()
{
    local source_dir=${1:---help}
    local shadow_dir=${2:-}
    local work_dir=${3:-}
    if [[ "${source_dir}" = "--help" || \
            -z "${shadow_dir}" || \
            -z "${work_dir}"  || \
            -n "${4:-}" ]]; then
        echo "Usage: make_overlay <source dir> <shadow dir> <work dir>"
        return 1
    fi

    # Make sure the actual filesystem/directory works.
    if [ ! -d "${source_dir}" ]; then
        echo >&2 "ERROR: ${source_dir}: does not exist."
        return 1
    fi

    if [ -n "$(grep "overlay ${source_dir} " /etc/mtab)" ]; then
        echo >&2 "ERROR: ${source_dir}: already mounted as overlay."
        return 2
    fi

    # Make sure the shadow and work dirs exist
    for dir in "${shadow_dir}" "${work_dir}"; do
        if [ ! -e "${dir}" ]; then mkdir "${dir}"; fi
        if [ ! -d "${dir}" ]; then
            echo >&2 "ERROR: ${dir}: not a directory."
            return 3
        fi
    done

    #TODO: cd if we're inside the source dir.

    # Mount the filesystem.
    sudo mount -t overlay overlay \
        -o "lowerdir=${source_dir},upperdir=${shadow_dir},workdir=${work_dir}" \
        "${source_dir}"

    echo "${source_dir}: overlaid to ${shadow_dir}"
}

make_overlay "$@"

